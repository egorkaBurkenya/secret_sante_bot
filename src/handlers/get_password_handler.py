from bot import dp, bot, UserState
from aiogram.utils.markdown import text, bold
from aiogram.types import Message, ParseMode
from aiogram.dispatcher import FSMContext

from config import PASSWORD

from src.helpers.delete_messages import delete_messages_for_count

@dp.message_handler(content_types=["text"] ,state=UserState.Registration.WatingPassword)
async def get_password_handler(message: Message, state: FSMContext):
    await delete_messages_for_count(message, bot)
    if message.text.strip() == PASSWORD:
        await message.answer(
            text(
                bold("–£–†–ê–ê–ê, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å... –ø–æ–∫–∞ —Ö–∑ –∫—Ç–æ —Ç—ã‚ùî"),
                "\n\n–Ω–æ —è –æ—á–µ–Ω—å —Ä–∞–¥ —á—Ç–æ —Ç—ã —Ç–æ–∂–µ —Ä–µ—à–∏–ª –∫ –Ω–∞—Å –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—å—Å—è\\!",
                bold("\n\n–£–ö–ê–ñ–ò –°–í–û–ô –ò–ù–î–ò–§–ò–ö–ê–¢–û–†\\(–ò–ú–Ø\\)\n"),
                "\n–Ω–æ —Ç–æ–ª—å–∫–æ —Ç–∞–∫ —á—Ç–æ –±—ã –ø–æ–Ω—è–ª–∏ –¥—Ä—É–≥–∏–µ –¥–æ–¥–∏–∫–∏\\.\\.\\.üßòüèª"
                ),
            parse_mode=ParseMode.MARKDOWN_V2
        )
        await UserState.Registration.next()
    else:
        await message.answer(
            "No. –£—Ö–æ–¥–∏ –î–∂—ä–∞–≥–µ–ª—å üí©üí©üí©"
        )
        await state.finish()
    
